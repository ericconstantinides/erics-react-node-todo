{"version":3,"sources":["todo.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","todo","_render","selectedIndex","todoList","innerHTML","todos","forEach","item","status","title","undefined","children","querySelector","select","response","Promise","resolve","reject","Error","statusText","json","getTodos","callback","fetch","then","data","error","console","log","addTodo","input","addTodoInput","value","newTodo","newPosition","push","method","headers","Content-type","body","JSON","stringify","_id","alert","completeTodo","index","dbId","editTodo","cancelTodo","updateTodo","deleteTodo","splice","container","document","getElementById","addEventListener","event","concat","indexOf","target","closest","id","action","getAttribute","keyCode","Element","prototype","matches","msMatchesSelector","selector","el","this","parentElement"],"mappings":"AAAA,YAEA,SAASA,oBAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIG,GAAI,EAAGC,EAAOH,MAAMD,EAAIK,QAASF,EAAIH,EAAIK,OAAQF,IAAOC,EAAKD,GAAKH,EAAIG,EAAM,OAAOC,GAAe,MAAOH,OAAMK,KAAKN,GAD1L,GAAIO,MAAQ,WA+CV,QAASC,GAAQC,GACfC,EAASC,UAAY,GACrBC,EAAMC,QAAQ,SAAAC,GACQ,SAAhBA,EAAKC,OAEPL,EAASC,WAAT,8BAC+C,aAAhBG,EAAKC,OAAwB,eAAiB,IAD7E,2JAGwE,aAAhBD,EAAKC,OAAwB,UAAY,IAHjG,mCAGsID,EAAKE,MAH3I,wCAKsB,aAAhBF,EAAKC,OAAwB,2EAA6E,yEALhH,oBAQAL,EAASC,WAAT,2IACyEG,EAAKE,MAD9E,oRAQkBC,SAAlBR,GACFC,EAASQ,SAAST,GAAeU,cAAc,2BAA2BC,SAI9E,QAASL,GAAOM,GACd,MAAIA,GAASN,QAAU,KAAOM,EAASN,OAAS,IAAYO,QAAQC,QAAQF,GAChEC,QAAQE,OAAO,GAAIC,OAAMJ,EAASK,aAGhD,QAASC,GAAKN,GACZ,MAAOA,GAASM,OAIlB,QAASC,GAASC,GAChBC,MAAM,UACHC,KAAKhB,GACLgB,KAAKJ,GACLI,KAAK,SAAAC,GACJpB,EAAQoB,EACRH,MALJC,SAOS,SAAAG,GAAA,MAASC,SAAQC,IAAI,iBAAkBF,KAGlD,QAASG,GAAQC,GAIf,GAFAA,EAAQA,GAASC,EAAaC,MAEnB,CAET,GAAIC,IAAYxB,MAAOqB,EAAOtB,OAAQ,QAClC0B,EAAc7B,EAAM8B,KAAKF,GAAW,CAGxCV,OAAM,UACFa,OAAQ,OACRC,SAAUC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUR,KAEtBT,KAAKhB,GACLgB,KAAKJ,GAELI,KAAK,SAAAC,GAAA,MAAQpB,GAAM6B,GAAaQ,IAAMjB,EAAKiB,MAR9CnB,SASS,SAAAG,GAAA,MAASC,SAAQC,IAAI,iBAAkBF,KAGhDK,EAAaC,MAAQ,GACrB/B,QAEA0C,OAAM,6BAIV,QAASC,GAAaC,EAAMC,GAC1BzC,EAAMwC,GAAOrC,OAAiC,SAAxBH,EAAMwC,GAAOrC,OAAoB,WAAa,OAEpEe,MAAAA,UAAgBuB,GACZV,OAAQ,MACRC,SAAUC,eAAgB,oBAC1BC,KAAMC,KAAKC,WAAWhC,MAAOJ,EAAMwC,GAAOpC,MAAMD,OAAQH,EAAMwC,GAAOrC,WAEtEgB,KAAKhB,GALRe,SAMS,SAAAG,GAAA,MAASC,SAAQC,IAAI,iBAAkBF,KAChDzB,IAGF,QAAS8C,GAASF,GAChBxC,EAAMwC,GAAOrC,OAAS,OACtBP,EAAQ4C,GAGV,QAASG,GAAWH,GAClBxC,EAAMwC,GAAOrC,OAAS,OACtBP,IAGF,QAASgD,GAAWJ,EAAMC,GACxBzC,EAAMwC,GAAOpC,MAAQN,EAASQ,SAASkC,GAAOjC,cAAc,2BAA2BoB,MACvF3B,EAAMwC,GAAOrC,OAAS,OAEtBe,MAAAA,UAAgBuB,GACZV,OAAQ,MACRC,SAAUC,eAAgB,oBAC1BC,KAAMC,KAAKC,WAAWhC,MAAOJ,EAAMwC,GAAOpC,MAAOD,OAAQH,EAAMwC,GAAOrC,WAEvEgB,KAAKhB,GALRe,SAMS,SAAAG,GAAA,MAASC,SAAQC,IAAI,iBAAkBF,KAChDzB,IAGF,QAASiD,GAAWL,EAAMC,GAExBzC,EAAM8C,OAAON,EAAO,GAEpBtB,MAAAA,UAAgBuB,GAAUV,OAAQ,WAC/BZ,KAAKhB,GADRe,SAES,SAAAG,GAAA,MAASC,SAAQC,IAAI,iBAAkBF,KAChDzB,IApKF,GAAImD,GAAYC,SAASC,eAAe,QACpCnD,EAAWiD,EAAUxC,cAAc,sBACnCmB,EAAeqB,EAAUxC,cAAc,0BAEvCP,IAsKJ,OAnKA+C,GAAUG,iBAAiB,QAAS,SAACC,GAEnC,GAAIX,MAAQY,OAAAjE,mBAAIW,EAASQ,WAAU+C,QAAQF,EAAMG,OAAOC,QAAQ,wBAE5DC,EAAKhB,GAAS,EAAIxC,EAAMwC,GAAOH,IAAM,KACrCoB,EAASN,EAAMG,OAAOI,aAAa,YACxB,UAAXD,EAAmBf,EAASF,GACZ,WAAXiB,EAAqBZ,EAAWL,EAAMgB,GAC3B,QAAXC,EAAkBjC,IACP,WAAXiC,EAAqBd,EAAWH,GACrB,WAAXiB,EAAqBb,EAAWJ,EAAMgB,GAC3B,cAAXC,GAAwBlB,EAAaC,EAAMgB,KAGtDT,EAAUG,iBAAiB,UAAW,SAACC,GACrC,GAAsB,KAAlBA,EAAMQ,QAAgB,CACxB,GAAIF,GAASN,EAAMG,OAAOI,aAAa,YACvC,IAAe,aAAXD,EAAuBjC,QACtB,CACH,GAAIgB,MAAQY,OAAAjE,mBAAIW,EAASQ,WAAU+C,QAAQF,EAAMG,OAAOC,QAAQ,wBAC5DC,EAAKhB,GAAS,EAAIxC,EAAMwC,GAAOH,IAAM,IAC1B,eAAXoB,GAAwBb,EAAWJ,EAAMgB,OAKnDT,EAAUG,iBAAiB,QAAS,SAACC,GACnC,GAAsB,KAAlBA,EAAMQ,QAAgB,CACxB,GAAIF,GAASN,EAAMG,OAAOI,aAAa,aACnClB,KAAQY,OAAAjE,mBAAIW,EAASQ,WAAU+C,QAAQF,EAAMG,OAAOC,QAAQ,uBACjD,eAAXE,GAAwBd,EAAWH,MAI3CxB,EAASpB,IAkIP4B,QAAAA,EACAe,aAAAA,EACAG,SAAAA,EACAC,WAAAA,EACAC,WAAAA,EACAC,WAAAA,KAKCe,SAAQC,UAAUC,UAASF,QAAQC,UAAUC,QAAUF,QAAQC,UAAUE,mBACzEH,QAAQC,UAAUN,UAASK,QAAQC,UAAUN,QAAU,SAAUS,GAEpE,IADA,GAAIC,GAAKC,KACFD,GAAI,CACT,GAAIA,EAAGH,QAAQE,GAAW,MAAOC,EACjCA,GAAKA,EAAGE","file":"todo.js","sourcesContent":["// the todo Revealing Module Pattern\nlet todo = (function() {\n\n  // cache DOM\n  let container = document.getElementById('todo');\n  let todoList = container.querySelector('[data-todo=\"list\"]');\n  let addTodoInput = container.querySelector('[data-todo=\"add-item\"]');\n\n  let todos = [];\n\n  // Bind Event(s) (really it's just one event delegation)\n  container.addEventListener('click', (event) => {\n    // get the index using ES6 destructuring, then back to an array, then indexOf\n    let index = [...todoList.children].indexOf(event.target.closest('[data-todo^=\"item\"]'));\n    // get the database ID:\n    let id = index >= 0 ? todos[index]._id : null;\n    let action = event.target.getAttribute('data-todo');\n    if (action === 'edit') editTodo(index);\n    else if (action === 'delete') deleteTodo(index,id);\n    else if (action === 'add') addTodo();\n    else if (action === 'cancel') cancelTodo(index);\n    else if (action === 'update') updateTodo(index,id);\n    else if (action === 'checkmark') completeTodo(index,id);\n  });\n\n  container.addEventListener('keydown', (event) => {\n    if (event.keyCode === 13) {\n      let action = event.target.getAttribute('data-todo');\n      if (action === 'add-item') addTodo();\n      else {\n        let index = [...todoList.children].indexOf(event.target.closest('[data-todo^=\"item\"]'));\n        let id = index >= 0 ? todos[index]._id : null;\n        if (action === 'edit-item') updateTodo(index,id);\n      }\n    }\n  });\n\n  container.addEventListener('keyup', (event) => {\n    if (event.keyCode === 27) {\n      let action = event.target.getAttribute('data-todo');\n      let index = [...todoList.children].indexOf(event.target.closest('[data-todo^=\"item\"]'));\n      if (action === 'edit-item') cancelTodo(index);\n    }\n  });\n\n  getTodos(_render);\n\n  // _render is the only place we repaint:\n  function _render(selectedIndex) {\n    todoList.innerHTML = '';\n    todos.forEach(item => {\n      if (item.status !== 'edit') {\n        // this one displays the todo item:\n        todoList.innerHTML +=\n          `<li class=\"list-group-item${item.status === 'complete' ? ' is-complete' : ''}\" data-todo=\"item\">\n            <label class=\"form-check-label\" data-todo=\"checkmark\">\n              <input class=\"form-check-input\" type=\"checkbox\" ${item.status === 'complete' ? 'checked' : ''} value=\"\" data-todo=\"checkmark\">${item.title}\n            </label>\n            ${item.status === 'complete' ? '<button class=\"btn btn-sm btn-danger\" data-todo=\"delete\">Delete</button>' : '<button class=\"btn btn-sm btn-default\" data-todo=\"edit\">edit</button>'}\n          </li>`;\n      } else { // This one edits:\n        todoList.innerHTML += `<li class=\"list-group-item edit\" data-todo=\"item-edit\">\n          <input class=\"form-control\" data-todo=\"edit-item\" type=\"text\" value=\"${item.title}\">\n          <button class=\"btn btn-sm btn-default\" data-todo=\"cancel\">Cancel</button>\n          <button class=\"btn btn-sm btn-success\" data-todo=\"update\">Update</button>\n          <button class=\"btn btn-sm btn-danger\" data-todo=\"delete\">Delete</button>\n        </li>`;\n      }\n    });\n    if (selectedIndex !== undefined) {\n      todoList.children[selectedIndex].querySelector('[data-todo=\"edit-item\"]').select();\n    }\n  }\n\n  function status(response) {\n    if (response.status >= 200 && response.status < 300) return Promise.resolve(response)\n    else return Promise.reject(new Error(response.statusText))\n  }\n\n  function json(response) {\n    return response.json()\n  }\n\n  // RESTful events\n  function getTodos(callback) {\n    fetch('/todos')\n      .then(status)\n      .then(json)\n      .then(data => {\n        todos = data;\n        callback();\n      })\n      .catch(error => console.log('Request failed', error));\n  }\n\n  function addTodo(input) {\n    // check if there's an input:\n    input = input || addTodoInput.value;\n    // if either one is an input:\n    if (input) {\n      // add it to the list:\n      let newTodo = { title: input, status: 'open' };\n      let newPosition = todos.push(newTodo) - 1;\n\n      // add it to the api\n      fetch('/todos', {\n          method: 'POST',\n          headers: {'Content-type': 'application/json'},\n          body: JSON.stringify(newTodo)\n        })\n        .then(status)\n        .then(json)\n        // Success, add the id to the last one:\n        .then(data => todos[newPosition]._id = data._id)\n        .catch(error => console.log('Request failed', error));\n\n      // clear out the input\n      addTodoInput.value = '';\n      _render();\n    } else {\n      alert('Please enter a todo item.');\n    }\n  }\n\n  function completeTodo(index,dbId) {\n    todos[index].status = todos[index].status === 'open' ? 'complete' : 'open';\n    // add it to the api\n    fetch(`/todos/${dbId}`, {\n        method: 'PUT',\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({title: todos[index].title,status: todos[index].status})\n      })\n      .then(status)\n      .catch(error => console.log('Request failed', error));\n    _render();\n  }\n\n  function editTodo(index) {\n    todos[index].status = 'edit';\n    _render(index);\n  }\n\n  function cancelTodo(index) {\n    todos[index].status = 'open';\n    _render();\n  }\n\n  function updateTodo(index,dbId) {\n    todos[index].title = todoList.children[index].querySelector('[data-todo=\"edit-item\"]').value;\n    todos[index].status = 'open';\n    // update the api\n    fetch(`/todos/${dbId}`, {\n        method: 'PUT',\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({title: todos[index].title, status: todos[index].status})\n      })\n      .then(status)\n      .catch(error => console.log('Request failed', error));\n    _render();\n  }\n\n  function deleteTodo(index,dbId) {\n    // take 1 object out of the array at the index:\n    todos.splice(index, 1);\n    // update the API\n    fetch(`/todos/${dbId}`, { method: 'DELETE' })\n      .then(status)\n      .catch(error => console.log('Request failed', error));\n    _render();\n  }\n\n  function todoApi(method, parameters) {}\n\n  // return the public methods\n  return {\n    addTodo,\n    completeTodo,\n    editTodo,\n    cancelTodo,\n    updateTodo,\n    deleteTodo\n  }\n})();\n\n\nif (!Element.prototype.matches) Element.prototype.matches = Element.prototype.msMatchesSelector;\nif (!Element.prototype.closest) Element.prototype.closest = function (selector) {\n  let el = this;\n  while (el) {\n    if (el.matches(selector)) return el;\n    el = el.parentElement;\n  }\n};"],"sourceRoot":"frontend/scripts"}